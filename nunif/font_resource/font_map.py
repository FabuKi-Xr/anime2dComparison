# generated by font_resource.list
# Note that the directory separator is assumed to be posixpath(`/`).
# It is replaced by the platform directory separator in `utils.py:native_path()`.


FONT_MAP = \
{'BIZ UDGothic': 'BIZ_UDGothic/BIZUDGothic-Regular.ttf',
 'BIZ UDGothic Bold': 'BIZ_UDGothic/BIZUDGothic-Bold.ttf',
 'BIZ UDMincho': 'BIZ_UDMincho/BIZUDMincho-Regular.ttf',
 'BIZ UDPGothic': 'BIZ_UDPGothic/BIZUDPGothic-Regular.ttf',
 'BIZ UDPGothic Bold': 'BIZ_UDPGothic/BIZUDPGothic-Bold.ttf',
 'BIZ UDPMincho': 'BIZ_UDPMincho/BIZUDPMincho-Regular.ttf',
 'Dela Gothic One Regular': 'Dela_Gothic_One/DelaGothicOne-Regular.ttf',
 'DotGothic16 Regular': 'DotGothic16/DotGothic16-Regular.ttf',
 'Hachi Maru Pop Regular': 'Hachi_Maru_Pop/HachiMaruPop-Regular.ttf',
 'Hina Mincho Regular': 'Hina_Mincho/HinaMincho-Regular.ttf',
 'IBM Plex Sans JP Bold': 'IBM_Plex_Sans_JP/IBMPlexSansJP-Bold.ttf',
 'IBM Plex Sans JP ExtraLight': 'IBM_Plex_Sans_JP/IBMPlexSansJP-ExtraLight.ttf',
 'IBM Plex Sans JP Light': 'IBM_Plex_Sans_JP/IBMPlexSansJP-Light.ttf',
 'IBM Plex Sans JP Medium': 'IBM_Plex_Sans_JP/IBMPlexSansJP-Medium.ttf',
 'IBM Plex Sans JP Regular': 'IBM_Plex_Sans_JP/IBMPlexSansJP-Regular.ttf',
 'IBM Plex Sans JP SemiBold': 'IBM_Plex_Sans_JP/IBMPlexSansJP-SemiBold.ttf',
 'IBM Plex Sans JP Thin': 'IBM_Plex_Sans_JP/IBMPlexSansJP-Thin.ttf',
 'Kaisei Decol Bold': 'Kaisei_Decol/KaiseiDecol-Bold.ttf',
 'Kaisei Decol Medium': 'Kaisei_Decol/KaiseiDecol-Medium.ttf',
 'Kaisei Decol Regular': 'Kaisei_Decol/KaiseiDecol-Regular.ttf',
 'Kaisei HarunoUmi Bold': 'Kaisei_HarunoUmi/KaiseiHarunoUmi-Bold.ttf',
 'Kaisei HarunoUmi Medium': 'Kaisei_HarunoUmi/KaiseiHarunoUmi-Medium.ttf',
 'Kaisei HarunoUmi Regular': 'Kaisei_HarunoUmi/KaiseiHarunoUmi-Regular.ttf',
 'Kaisei Opti Bold': 'Kaisei_Opti/KaiseiOpti-Bold.ttf',
 'Kaisei Opti Medium': 'Kaisei_Opti/KaiseiOpti-Medium.ttf',
 'Kaisei Opti Regular': 'Kaisei_Opti/KaiseiOpti-Regular.ttf',
 'Kaisei Tokumin Bold': 'Kaisei_Tokumin/KaiseiTokumin-Bold.ttf',
 'Kaisei Tokumin ExtraBold': 'Kaisei_Tokumin/KaiseiTokumin-ExtraBold.ttf',
 'Kaisei Tokumin Medium': 'Kaisei_Tokumin/KaiseiTokumin-Medium.ttf',
 'Kaisei Tokumin Regular': 'Kaisei_Tokumin/KaiseiTokumin-Regular.ttf',
 'Kiwi Maru Light': 'Kiwi_Maru/KiwiMaru-Light.ttf',
 'Kiwi Maru Medium': 'Kiwi_Maru/KiwiMaru-Medium.ttf',
 'Kiwi Maru Regular': 'Kiwi_Maru/KiwiMaru-Regular.ttf',
 'Klee One Regular': 'Klee_One/KleeOne-Regular.ttf',
 'Klee One SemiBold': 'Klee_One/KleeOne-SemiBold.ttf',
 'Kosugi Maru Regular': 'Kosugi_Maru/KosugiMaru-Regular.ttf',
 'Kosugi Regular': 'Kosugi/Kosugi-Regular.ttf',
 'M PLUS 1 Code Regular': 'M_PLUS_1_Code/MPLUS1Code-VariableFont_wght.ttf',
 'M PLUS 1 Thin': 'M_PLUS_1/MPLUS1-VariableFont_wght.ttf',
 'M PLUS 1p Black': 'M_PLUS_1p/MPLUS1p-Black.ttf',
 'M PLUS 1p Bold': 'M_PLUS_1p/MPLUS1p-Bold.ttf',
 'M PLUS 1p ExtraBold': 'M_PLUS_1p/MPLUS1p-ExtraBold.ttf',
 'M PLUS 1p Light': 'M_PLUS_1p/MPLUS1p-Light.ttf',
 'M PLUS 1p Medium': 'M_PLUS_1p/MPLUS1p-Medium.ttf',
 'M PLUS 1p Regular': 'M_PLUS_1p/MPLUS1p-Regular.ttf',
 'M PLUS 1p Thin': 'M_PLUS_1p/MPLUS1p-Thin.ttf',
 'M PLUS 2 Thin': 'M_PLUS_2/MPLUS2-VariableFont_wght.ttf',
 'Mochiy Pop One Regular': 'Mochiy_Pop_One/MochiyPopOne-Regular.ttf',
 'Mochiy Pop P One Regular': 'Mochiy_Pop_P_One/MochiyPopPOne-Regular.ttf',
 'Murecho Thin': 'Murecho/Murecho-VariableFont_wght.ttf',
 'New Tegomin Regular': 'New_Tegomin/NewTegomin-Regular.ttf',
 'Noto Sans JP': 'Noto_Sans_JP/NotoSansJP-Regular.otf',
 'Noto Sans JP Black': 'Noto_Sans_JP/NotoSansJP-Black.otf',
 'Noto Sans JP Bold': 'Noto_Sans_JP/NotoSansJP-Bold.otf',
 'Noto Sans JP Light': 'Noto_Sans_JP/NotoSansJP-Light.otf',
 'Noto Sans JP Medium': 'Noto_Sans_JP/NotoSansJP-Medium.otf',
 'Noto Sans JP Thin': 'Noto_Sans_JP/NotoSansJP-Thin.otf',
 'Noto Serif JP': 'Noto_Serif_JP/NotoSerifJP-Regular.otf',
 'Noto Serif JP Black': 'Noto_Serif_JP/NotoSerifJP-Black.otf',
 'Noto Serif JP Bold': 'Noto_Serif_JP/NotoSerifJP-Bold.otf',
 'Noto Serif JP ExtraLight': 'Noto_Serif_JP/NotoSerifJP-ExtraLight.otf',
 'Noto Serif JP Light': 'Noto_Serif_JP/NotoSerifJP-Light.otf',
 'Noto Serif JP Medium': 'Noto_Serif_JP/NotoSerifJP-Medium.otf',
 'Noto Serif JP SemiBold': 'Noto_Serif_JP/NotoSerifJP-SemiBold.otf',
 'Potta One Regular': 'Potta_One/PottaOne-Regular.ttf',
 'Rampart One Regular': 'Rampart_One/RampartOne-Regular.ttf',
 'Reggae One Regular': 'Reggae_One/ReggaeOne-Regular.ttf',
 'RocknRoll One Regular': 'RocknRoll_One/RocknRollOne-Regular.ttf',
 'Rounded Mplus 1c': 'M_PLUS_Rounded_1c/MPLUSRounded1c-Regular.ttf',
 'Rounded Mplus 1c Black': 'M_PLUS_Rounded_1c/MPLUSRounded1c-Black.ttf',
 'Rounded Mplus 1c Bold': 'M_PLUS_Rounded_1c/MPLUSRounded1c-Bold.ttf',
 'Rounded Mplus 1c ExtraBold': 'M_PLUS_Rounded_1c/MPLUSRounded1c-ExtraBold.ttf',
 'Rounded Mplus 1c Light': 'M_PLUS_Rounded_1c/MPLUSRounded1c-Light.ttf',
 'Rounded Mplus 1c Medium': 'M_PLUS_Rounded_1c/MPLUSRounded1c-Medium.ttf',
 'Rounded Mplus 1c Thin': 'M_PLUS_Rounded_1c/MPLUSRounded1c-Thin.ttf',
 'Sawarabi Gothic': 'Sawarabi_Gothic/SawarabiGothic-Regular.ttf',
 'Sawarabi Mincho': 'Sawarabi_Mincho/SawarabiMincho-Regular.ttf',
 'Shippori Antique B1 Regular': 'Shippori_Antique_B1/ShipporiAntiqueB1-Regular.ttf',
 'Shippori Antique Regular': 'Shippori_Antique/ShipporiAntique-Regular.ttf',
 'Shippori Mincho B1 Bold': 'Shippori_Mincho_B1/ShipporiMinchoB1-Bold.ttf',
 'Shippori Mincho B1 ExtraBold': 'Shippori_Mincho_B1/ShipporiMinchoB1-ExtraBold.ttf',
 'Shippori Mincho B1 Medium': 'Shippori_Mincho_B1/ShipporiMinchoB1-Medium.ttf',
 'Shippori Mincho B1 Regular': 'Shippori_Mincho_B1/ShipporiMinchoB1-Regular.ttf',
 'Shippori Mincho B1 SemiBold': 'Shippori_Mincho_B1/ShipporiMinchoB1-SemiBold.ttf',
 'Shippori Mincho Bold': 'Shippori_Mincho/ShipporiMincho-Bold.ttf',
 'Shippori Mincho ExtraBold': 'Shippori_Mincho/ShipporiMincho-ExtraBold.ttf',
 'Shippori Mincho Medium': 'Shippori_Mincho/ShipporiMincho-Medium.ttf',
 'Shippori Mincho Regular': 'Shippori_Mincho/ShipporiMincho-Regular.ttf',
 'Shippori Mincho SemiBold': 'Shippori_Mincho/ShipporiMincho-SemiBold.ttf',
 'Stick Regular': 'Stick/Stick-Regular.ttf',
 'Train One Regular': 'Train_One/TrainOne-Regular.ttf',
 'Yomogi Regular': 'Yomogi/Yomogi-Regular.ttf',
 'Yuji Boku Regular': 'Yuji_Boku/YujiBoku-Regular.ttf',
 'Yuji Mai Regular': 'Yuji_Mai/YujiMai-Regular.ttf',
 'Yuji Syuku Regular': 'Yuji_Syuku/YujiSyuku-Regular.ttf',
 'Yusei Magic Regular': 'Yusei_Magic/YuseiMagic-Regular.ttf',
 'Zen Antique Regular': 'Zen_Antique/ZenAntique-Regular.ttf',
 'Zen Antique Soft Regular': 'Zen_Antique_Soft/ZenAntiqueSoft-Regular.ttf',
 'Zen Kaku Gothic Antique Black': 'Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Black.ttf',
 'Zen Kaku Gothic Antique Bold': 'Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Bold.ttf',
 'Zen Kaku Gothic Antique Light': 'Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Light.ttf',
 'Zen Kaku Gothic Antique Medium': 'Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Medium.ttf',
 'Zen Kaku Gothic Antique Regular': 'Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Regular.ttf',
 'Zen Kaku Gothic New Black': 'Zen_Kaku_Gothic_New/ZenKakuGothicNew-Black.ttf',
 'Zen Kaku Gothic New Bold': 'Zen_Kaku_Gothic_New/ZenKakuGothicNew-Bold.ttf',
 'Zen Kaku Gothic New Light': 'Zen_Kaku_Gothic_New/ZenKakuGothicNew-Light.ttf',
 'Zen Kaku Gothic New Medium': 'Zen_Kaku_Gothic_New/ZenKakuGothicNew-Medium.ttf',
 'Zen Kaku Gothic New Regular': 'Zen_Kaku_Gothic_New/ZenKakuGothicNew-Regular.ttf',
 'Zen Kurenaido Regular': 'Zen_Kurenaido/ZenKurenaido-Regular.ttf',
 'Zen Maru Gothic Black': 'Zen_Maru_Gothic/ZenMaruGothic-Black.ttf',
 'Zen Maru Gothic Bold': 'Zen_Maru_Gothic/ZenMaruGothic-Bold.ttf',
 'Zen Maru Gothic Light': 'Zen_Maru_Gothic/ZenMaruGothic-Light.ttf',
 'Zen Maru Gothic Medium': 'Zen_Maru_Gothic/ZenMaruGothic-Medium.ttf',
 'Zen Maru Gothic Regular': 'Zen_Maru_Gothic/ZenMaruGothic-Regular.ttf',
 'Zen Old Mincho Black': 'Zen_Old_Mincho/ZenOldMincho-Black.ttf',
 'Zen Old Mincho Bold': 'Zen_Old_Mincho/ZenOldMincho-Bold.ttf',
 'Zen Old Mincho Medium': 'Zen_Old_Mincho/ZenOldMincho-Medium.ttf',
 'Zen Old Mincho Regular': 'Zen_Old_Mincho/ZenOldMincho-Regular.ttf',
 'Zen Old Mincho SemiBold': 'Zen_Old_Mincho/ZenOldMincho-SemiBold.ttf'}


def validate():
    from os import path
    from nunif.logger import logger

    font_dir = path.join(path.dirname(__file__), "fonts")
    for name, file_path in FONT_MAP.items():
        font_file = path.join(font_dir, file_path)
        if not path.exists(font_file):
            logger.warning(f"font_resource: {file_path} not found")

validate()
